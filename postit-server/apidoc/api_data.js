define({ "api": [  {    "type": "post",    "url": "/organisations/:organisationName/auth/employees",    "title": "Add an employee to the organisation",    "name": "addEmployee",    "group": "Organisation_Authentication",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>First name of the employee</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Last name of the employee</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "position",            "description": "<p>Position of the employee within the organisation</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>E-mail address of the employee</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": " {\n  \"email\": \"mail@domain.com\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Johnson\",\n  \"position\": \"Software Engineer\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 Created\n{\n    \"message\": \"Verification e-mail sent to mail@domain.com\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "E-mail address is already used within the organisation",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Invalid e-mail\",\n  \"message\": \"The supplied e-mail has already been used within this organisation\"\n}",          "type": "json"        },        {          "title": "E-mail address domain is not allowed",          "content": "HTTP/1.1 403 Forbidden\n{\n  \"type\": \"E-mail is not allowed\",\n  \"message\": \"The provided e-mail address is not allowed\"\n}",          "type": "json"        },        {          "title": "E-mail address is not a valid e-mail address",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Invalid e-mail\",\n  \"message\": \"The provided e-mail address is not valid\"\n}",          "type": "json"        },        {          "title": "No organisation found for the given name",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid URL\",\n  \"message\": \"Organisation not found\"\n}",          "type": "json"        },        {          "title": "Missing or invalid body parameters",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Missing parameter(s)\",\n  \"message\": \"Please specify all required parameters in the body of your request\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/authRouter.js",    "groupTitle": "Organisation_Authentication"  },  {    "type": "get",    "url": "/organisations/:organisationName/auth/employees/:email",    "title": "Get employee registration status",    "name": "emailBoundToEmployee",    "group": "Organisation_Authentication",    "description": "<p>Returns true if the email address is already bound to an existing user. Returns false if not.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>E-mail address</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "employeeInOrganisation",            "description": "<p>True if the provided e-mail address is already bound to an existing employee, false if not</p>"          }        ]      },      "examples": [        {          "title": "Employee is in organisation:",          "content": "HTTP/1.1 200 OK\n{\n    \"employeeInOrganisation\": true\n}",          "type": "json"        },        {          "title": "Employee is not in organisation:",          "content": "HTTP/1.1 200 OK\n{\n    \"employeeInOrganisation\": false\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/authRouter.js",    "groupTitle": "Organisation_Authentication",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      },      "examples": [        {          "title": "No organisation found for the given name",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid URL\",\n  \"message\": \"Organisation not found\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        },        {          "title": "E-mail address domain is not allowed",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid url\",\n  \"message\": \"Employee with email mail@domain.com not found\"\n}",          "type": "json"        },        {          "title": "E-mail address is not a valid e-mail address",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Invalid e-mail\",\n  \"message\": \"The provided e-mail address is not valid\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/organisations/:organisationName/auth/employees/:email",    "title": "Login an employee",    "name": "employeeLogin",    "group": "Organisation_Authentication",    "description": "<p>Send verification e-mail if all employee details are right</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>E-mail address</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n    \"message\": \"Verification e-mail sent to mail@domain.com\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/authRouter.js",    "groupTitle": "Organisation_Authentication",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      },      "examples": [        {          "title": "No organisation found for the given name",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid URL\",\n  \"message\": \"Organisation not found\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        },        {          "title": "E-mail address domain is not allowed",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid url\",\n  \"message\": \"Employee with email mail@domain.com not found\"\n}",          "type": "json"        },        {          "title": "E-mail address is not a valid e-mail address",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Invalid e-mail\",\n  \"message\": \"The provided e-mail address is not valid\"\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/organisations/:organisationName/auth/logout",    "title": "Log out an employee",    "name": "logout",    "group": "Organisation_Authentication",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n    \"message\": \"Successfully logged out\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/authRouter.js",    "groupTitle": "Organisation_Authentication",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      },      "examples": [        {          "title": "No organisation found for the given name",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid URL\",\n  \"message\": \"Organisation not found\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/organisations/:organisationName/auth/session",    "title": "Restore active session",    "name": "restoreSession",    "group": "Organisation_Authentication",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "employee",            "description": "<p>Employee object</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n    \"_id\": \"1234abc\",\n    \"email\": \"mail@domain.com\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Johnson\",\n    \"position\": \"CEO\",\n    \"sessionUID\": \"1234a\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Session not found",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Session not found\",\n  \"message\": \"No active session found for the user\"\n}",          "type": "json"        },        {          "title": "No organisation found for the given name",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid URL\",\n  \"message\": \"Organisation not found\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        },        {          "title": "User is not authorized to acces the resource",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"type\": \"Authorization error\",\n  \"message\": \"Please login to access this resource\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/authRouter.js",    "groupTitle": "Organisation_Authentication"  },  {    "type": "put",    "url": "/organisations/:organisationName/auth/employees/verify",    "title": "Verify e-mail address of employee",    "name": "verifyEmail",    "group": "Organisation_Authentication",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Verification token</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n  \"token\": \"1234abcdef\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message</p>"          },          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "employee",            "description": "<p>Employee object</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n    \"message\": \"User verified successfully\",\n    \"_id\": \"1234abc\",\n    \"email\": \"mail@domain.com\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Johnson\",\n    \"position\": \"CEO\",\n    \"sessionUID\": \"1234a\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Token is invalid",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Invalid token\",\n  \"message\": \"The token is not valid\"\n}",          "type": "json"        },        {          "title": "No organisation found for the given name",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid URL\",\n  \"message\": \"Organisation not found\"\n}",          "type": "json"        },        {          "title": "Missing or invalid body parameters",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Missing parameter(s)\",\n  \"message\": \"Please specify all required parameters in the body of your request\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/authRouter.js",    "groupTitle": "Organisation_Authentication"  },  {    "type": "post",    "url": "/organisations/:organisationName/employees/ideas/:ideaId/comments",    "title": "Comment on an idea",    "name": "addCommentToIdea",    "group": "Organisation_Employees",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "comment",            "description": "<p>The comment that needs to be posted</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": " {\n  \"comment\": \"I Like this idea\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message</p>"          },          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "idea",            "description": "<p>Modified idea</p>"          }        ]      },      "examples": [        {          "title": "Comment was added:",          "content": "HTTP/1.1 200 OK\n{ \"message\": \"Comment registered\",\n  \"idea\": {\n         \"upvotes\": [],\n         \"comments\": [],\n         \"_id\": \"5ce4f995e15e2b0d9dd19a5a\",\n         \"author\": \"5ce4f97ae15e2b0d9dd19a58\",\n         \"authorFirstName\": \"John\",\n         \"authorLastName\": \"Johnson\",\n         \"authorPosition\": \"CEO\",\n         \"title\": \"My cool idea\",\n         \"description\": \"Description of my cool idea\"\n         }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/employeeRouter.js",    "groupTitle": "Organisation_Employees",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      },      "examples": [        {          "title": "No organisation found for the given name",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid URL\",\n  \"message\": \"Organisation not found\"\n}",          "type": "json"        },        {          "title": "Missing or invalid body parameters",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Missing parameter(s)\",\n  \"message\": \"Please specify all required parameters in the body of your request\"\n}",          "type": "json"        },        {          "title": "User is not authorized to acces the resource",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"type\": \"Authorization error\",\n  \"message\": \"Please login to access this resource\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/organisations/:organisationName/employees/ideas",    "title": "Add an idea to the organisation",    "name": "addIdea",    "group": "Organisation_Employees",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Title of the new idea</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Description of the new idea</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": " {\n  \"title\": \"My cool idea\",\n  \"description\": \"Description of my cool idea\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "idea",            "description": "<p>Newly added idea</p>"          }        ]      },      "examples": [        {          "title": "Idea was added:",          "content": "HTTP/1.1 201 Created\n{\n         \"upvotes\": [],\n         \"comments\": [],\n         \"_id\": \"5ce4f995e15e2b0d9dd19a5a\",\n         \"author\": \"5ce4f97ae15e2b0d9dd19a58\",\n         \"authorFirstName\": \"John\",\n         \"authorLastName\": \"Johnson\",\n         \"authorPosition\": \"CEO\",\n         \"title\": \"My cool idea\",\n         \"description\": \"Description of my cool idea\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/employeeRouter.js",    "groupTitle": "Organisation_Employees",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      },      "examples": [        {          "title": "No organisation found for the given name",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid URL\",\n  \"message\": \"Organisation not found\"\n}",          "type": "json"        },        {          "title": "Missing or invalid body parameters",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Missing parameter(s)\",\n  \"message\": \"Please specify all required parameters in the body of your request\"\n}",          "type": "json"        },        {          "title": "User is not authorized to acces the resource",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"type\": \"Authorization error\",\n  \"message\": \"Please login to access this resource\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/organisations/:organisationName/employees",    "title": "Update employee details",    "name": "updateEmployee",    "group": "Organisation_Employees",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ObjectId belonging to an employee</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>The firstname of the employee</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>The lastname of the employee</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "position",            "description": "<p>The position of the employee</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "image",            "description": "<p>The profile-image of the employee</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": " {\n\t    \"firstName\": \"Kevin\" ,\n\t    \"lastName\" : \"van Schaijk\",\n\t    \"position\": \"CEO\",\n\t    \"image\": \"34kjhkjhoo-profile.jpg\"\n }",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>Employee role</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Employee token</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "profileImage",            "description": "<p>Employee profile-image</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Employee id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "firstname",            "description": "<p>Employee firstname</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Employee lastName</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "position",            "description": "<p>Employee position</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Employee email</p>"          }        ]      },      "examples": [        {          "title": "Idea was added:",          "content": "   HTTP/1.1 200 OK\n{\n    \"role\": \"employee\",\n    \"token\": \"123abc\",\n    \"profileImage\": \"34kjhkjhoo-profile.jpg\",\n    \"_id\": \"5ce7dbbfb496b81c8653a2f3\",\n    \"firstName\": \"Kevin\",\n    \"lastName\": \"van Schaijk\",\n    \"position\": \"CEO\",\n    \"email\": \"kevin.van.schaijk01@gmail.com\"\n   }",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/employeeRouter.js",    "groupTitle": "Organisation_Employees",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      },      "examples": [        {          "title": "No organisation found for the given name",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid URL\",\n  \"message\": \"Organisation not found\"\n}",          "type": "json"        },        {          "title": "Missing or invalid body parameters",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Missing parameter(s)\",\n  \"message\": \"Please specify all required parameters in the body of your request\"\n}",          "type": "json"        },        {          "title": "User is not authorized to acces the resource",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"type\": \"Authorization error\",\n  \"message\": \"Please login to access this resource\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "organisations/:organisationName/employees/profilePic",    "title": "Upload new profile picture of a user",    "name": "uploadProfilePic",    "group": "Organisation_Employees",    "description": "<p>This endpoint can be used to upload a profile picture for a user</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "File",            "optional": false,            "field": "image",            "description": "<p>The image file that needs to be saved on the server (format must be .jpg, .gif or .png)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>The name of the non-existing organisation that the image is destined for</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "success",            "description": "<p>Success indicator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "fileName",            "description": "<p>Filename of the uploaded image on the server</p>"          }        ]      },      "examples": [        {          "title": "File successfully uploaded:",          "content": "HTTP/1.1 200 OK\n{ \"success\": true,\n  \"employeeMail\": \"mail@domain.com\",\n  \"fileName\": \"filename.jpg\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Something has gone wrong while trying to upload the image",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Image upload error\",\n  \"message\": \"Something went wrong when trying to upload your image\"\n}",          "type": "json"        },        {          "title": "File is too large",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Image upload error\",\n  \"message\": \"The provided image is too large\"\n}",          "type": "json"        },        {          "title": "Form field has the wrong name",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Image upload error\",\n  \"message\": \"Something has gone wrong during the image upload. Please check the form field name, it should be 'image\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        },        {          "title": "User is not authorized to acces the resource",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"type\": \"Authorization error\",\n  \"message\": \"Please login to access this resource\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/imageRouter/employeeImgRouter.js",    "groupTitle": "Organisation_Employees"  },  {    "type": "post",    "url": "/organisations/:organisationName/shared/notifications",    "title": "Add a subscriptionObject to the organisation",    "name": "addNotificationObjectToOrganisation",    "group": "Organisation_Shared",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "endpoint",            "description": "<p>Endpoint for notifications</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "expirationTime",            "description": "<p>Length for the object to be valid for</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "keys",            "description": "<p>Keys used for authentication</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": " {\n   \"endpoint\":\"https://fcm.googleapis.com/fcm/send/...\",\n   \"expirationTime\":null,\n   \"keys\":{\n       \"p256dh\":\"...\",\n       \"auth\":\"...\"\n   }\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "excludedOrgNotifications",            "description": "<p>Array with excludedOrgNotifications</p>"          }        ]      },      "examples": [        {          "title": "excludedOrgNotifications:",          "content": "HTTP/1.1 201 Created\n{\n     excludedOrgNotifications: [\"han\", \"schiphol\"]\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Invalid object in body",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Invalid body\",\n  \"message\": \"The body has to contain an object with the keys property\"\n}",          "type": "json"        },        {          "title": "No organisation found for the given name",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid URL\",\n  \"message\": \"Organisation not found\"\n}",          "type": "json"        },        {          "title": "Missing or invalid body parameters",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Missing parameter(s)\",\n  \"message\": \"Please specify all required parameters in the body of your request\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/sharedRouter.js",    "groupTitle": "Organisation_Shared"  },  {    "type": "put",    "url": "/organisations/:organisationName/shared/ideas/:ideaId/comments/:commentId/upvotes",    "title": "Add upvote to a comment",    "name": "addUpvoteToComment",    "group": "Organisation_Shared",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ideaId",            "description": "<p>ObjectId belonging to an idea</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "commentId",            "description": "<p>ObjectId which belongs to the comment to upvote</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "idea",            "description": "<p>Updated idea which belongs to the given id</p>"          }        ]      },      "examples": [        {          "title": "Upvote was added:",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Upvote registered\",\n     \"idea\": {\n         \"upvotes\": [],\n         \"comments\": [{...comment}],\n         \"_id\": \"5ce4f995e15e2b0d9dd19a5a\",\n         \"author\": \"5ce4f97ae15e2b0d9dd19a58\",\n         \"authorFirstName\": \"John\",\n         \"authorLastName\": \"Johnson\",\n         \"authorPosition\": \"CEO\",\n         \"title\": \"My idea\",\n         \"description\": \"A description\"\n     }\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "No idea found for the given id",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Idea not found\",\n  \"message\": \"No idea found for the given id\"\n}",          "type": "json"        },        {          "title": "User has already upvoted the comment",          "content": "HTTP/1.1 403 Forbidden\n{\n  \"type\": \"Invalid action\",\n  \"message\": \"The current user has already upvoted this comment\"\n}",          "type": "json"        },        {          "title": "No comment found for the given id",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Comment not found\",\n  \"message\": \"No comment found for the given id\"\n}",          "type": "json"        },        {          "title": "No organisation found for the given name",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid URL\",\n  \"message\": \"Organisation not found\"\n}",          "type": "json"        },        {          "title": "Missing or invalid body parameters",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Missing parameter(s)\",\n  \"message\": \"Please specify all required parameters in the body of your request\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/sharedRouter.js",    "groupTitle": "Organisation_Shared"  },  {    "type": "post",    "url": "/organisations/:organisationName/shared/ideas/:ideaId/upvotes",    "title": "Add upvote to an idea",    "name": "addUpvoteToIdea",    "group": "Organisation_Shared",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ideaId",            "description": "<p>The objectId belonging to an idea</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message</p>"          },          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "idea",            "description": "<p>Updated idea which belongs to the given id</p>"          }        ]      },      "examples": [        {          "title": "Upvote was added:",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Upvote registered\",\n     \"idea\": {\n         \"upvotes\": [\"aPj6MWya3\"],\n         \"comments\": [],\n         \"_id\": \"5ce4f995e15e2b0d9dd19a5a\",\n         \"author\": \"5ce4f97ae15e2b0d9dd19a58\",\n         \"authorFirstName\": \"John\",\n         \"authorLastName\": \"Johnson\",\n         \"authorPosition\": \"CEO\",\n         \"title\": \"My idea\",\n         \"description\": \"A description\"\n     }\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "No idea found belonging to id",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Idea not found\",\n  \"message\": \"No idea found for the given id\"\n}",          "type": "json"        },        {          "title": "User has already upvoted the idea",          "content": "HTTP/1.1 403 Forbidden\n{\n  \"type\": \"Invalid action\",\n  \"message\": \"The current user has already upvoted this idea\"\n}",          "type": "json"        },        {          "title": "No organisation found for the given name",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid URL\",\n  \"message\": \"Organisation not found\"\n}",          "type": "json"        },        {          "title": "Missing or invalid body parameters",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Missing parameter(s)\",\n  \"message\": \"Please specify all required parameters in the body of your request\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/sharedRouter.js",    "groupTitle": "Organisation_Shared"  },  {    "type": "get",    "url": "/organisations/:organisationName/shared/ideas/:ideaId",    "title": "Get one idea",    "name": "getIdeaFromOrganisation",    "group": "Organisation_Shared",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ideaId",            "description": "<p>The objectId belonging to an idea</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "ideas",            "description": "<p>Array with ideas.</p>"          }        ]      },      "examples": [        {          "title": "Idea found:",          "content": "HTTP/1.1 200 OK\n\n     {\n         \"upvotes\": [\"aPj6MWya3\"],\n         \"comments\": [],\n         \"_id\": \"5ce4f995e15e2b0d9dd19a5a\",\n         \"author\": \"5ce4f97ae15e2b0d9dd19a58\",\n         \"authorFirstName\": \"John\",\n         \"authorLastName\": \"Johnson\",\n         \"authorPosition\": \"CEO\",\n         \"title\": \"My idea\",\n         \"description\": \"A description\"\n      }",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "No idea found belonging to id",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Idea not found\",\n  \"message\": \"No idea found for the given id\"\n}",          "type": "json"        },        {          "title": "No organisation found for the given name",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid URL\",\n  \"message\": \"Organisation not found\"\n}",          "type": "json"        },        {          "title": "Missing or invalid body parameters",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Missing parameter(s)\",\n  \"message\": \"Please specify all required parameters in the body of your request\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/sharedRouter.js",    "groupTitle": "Organisation_Shared"  },  {    "type": "get",    "url": "/organisations/:organisationName/shared/ideas",    "title": "Get a list of all ideas within an organisation",    "name": "getIdeasFromOrganisation",    "group": "Organisation_Shared",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "ideas",            "description": "<p>Array with ideas.</p>"          }        ]      },      "examples": [        {          "title": "Found ideas:",          "content": "HTTP/1.1 200 OK\n\n    [\n        {\n             \"upvotes\": [\"aPj6MWya3\"],\n             \"comments\": [],\n             \"_id\": \"5ce4f995e15e2b0d9dd19a5a\",\n             \"author\": \"5ce4f97ae15e2b0d9dd19a58\",\n             \"authorFirstName\": \"John\",\n             \"authorLastName\": \"Johnson\",\n             \"authorPosition\": \"CEO\",\n             \"title\": \"My idea\",\n             \"description\": \"A description\"\n         },\n         {\n             \"upvotes\": [],\n             \"comments\": [],\n             \"_id\": \"5ce4f995e15e2b0d9dd19a5a\",\n             \"author\": \"5ce4f97ae15e2b0d9dd19a58\",\n             \"authorFirstName\": \"Pete\",\n             \"authorLastName\": \"Van Dyke\",\n             \"authorPosition\": \"COO\",\n             \"title\": \"Another idea\",\n             \"description\": \"A description\"\n         }\n    ]",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "No ideas found in organisation",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"No ideas found\",\n  \"message\": \"No ideas were found for the organisation\"\n}",          "type": "json"        },        {          "title": "No organisation found for the given name",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid URL\",\n  \"message\": \"Organisation not found\"\n}",          "type": "json"        },        {          "title": "Missing or invalid body parameters",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Missing parameter(s)\",\n  \"message\": \"Please specify all required parameters in the body of your request\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/sharedRouter.js",    "groupTitle": "Organisation_Shared"  },  {    "type": "delete",    "url": "/organisations/:organisationName/shared/notifications/:sessionUid",    "title": "Delete subscriptionObject by sessionUid",    "name": "removeNotificationObjectFromOrganisation",    "group": "Organisation_Shared",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sessionUid",            "description": "<p>Uid to delete the notificationObjects for</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "excludedOrgNotifications",            "description": "<p>Array with excludedOrgNotifications</p>"          }        ]      },      "examples": [        {          "title": "excludedOrgNotifications:",          "content": "HTTP/1.1 200 OK\n{\n     excludedOrgNotifications: [\"han\", \"schiphol\"]\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "No subscription object found belonging to id",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid url param\",\n  \"message\": \"No subscription object could be found with the given sessionUid\"\n}",          "type": "json"        },        {          "title": "No organisation found for the given name",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid URL\",\n  \"message\": \"Organisation not found\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/sharedRouter.js",    "groupTitle": "Organisation_Shared"  },  {    "type": "post",    "url": "/organisations",    "title": "Add a new organisation",    "name": "addOrganisation",    "group": "Organisation",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "logoImg",            "description": "<p>Image filename + filetype (.png of .jpg) which contains a logo. You can find this name in the response from the image upload endpoint</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "backgroundImg",            "description": "<p>Image filename = filetype (.png of .jpg) which contains a background image. You can find this name in the response from the image upload endpoint</p>"          },          {            "group": "Parameter",            "type": "[String]",            "optional": false,            "field": "allowedMailDomains",            "description": "<p>Array which contains strings with allowed e-mail domain names</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>First name of the employee</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Last name of the employee</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "position",            "description": "<p>Position of the employee within the organisation</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>E-mail address of the employee</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "     {\n      \"organisationName\": \"han\",\n      \"logoImg\": \"IMAGE-1559030888142.jpg\",\n      \"backgroundImg\": \"IMAGE-1559030888142.jpg\",\n\t     \"allowedMailDomains\": [\"gmail.com\", \"hotmail.com\", \"yahoo.com\"],\n      \"email\": \"mail@domain.com\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Johnson\",\n      \"position\": \"Software Engineer\"\n    }",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 Created\n{\n    \"message\": \"Successfully created organisation han. Verification e-mail sent to mail@domain.com\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "AllowedDomains is not an array",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Invalid parameter\",\n  \"message\": \"AllowedDomains must be of type array\"\n}",          "type": "json"        },        {          "title": "E-mail address domain is not allowed",          "content": "HTTP/1.1 403 Forbidden\n{\n  \"type\": \"E-mail is not allowed\",\n  \"message\": \"The provided e-mail address is not allowed\"\n}",          "type": "json"        },        {          "title": "E-mail address is not a valid e-mail address",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Invalid e-mail\",\n  \"message\": \"The provided e-mail address is not valid\"\n}",          "type": "json"        },        {          "title": "Organisation name is already taken",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Invalid organisation name\",\n  \"message\": \"There already is an organisation with name han\"\n}",          "type": "json"        },        {          "title": "Organisation name contains whitespace",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Invalid organisation name\",\n  \"message\": \"The organisation name must not contain any whitespace\"\n}",          "type": "json"        },        {          "title": "Missing or invalid body parameters",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Missing parameter(s)\",\n  \"message\": \"Please specify all required parameters in the body of your request\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/addOrganisationRouter.js",    "groupTitle": "Organisation"  },  {    "type": "get",    "url": "/:organisationName/",    "title": "Get basic info from an organisation",    "description": "<p>Get name, background image, logo and allowed e-mail domains from an organisation</p>",    "name": "getOrganisation",    "group": "Organisation",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Organisation name</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>Name of the organisation.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "backgroundImg",            "description": "<p>URL to background image belonging to the organisation.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "logoImg",            "description": "<p>URL to logo image belonging to the organisation.</p>"          },          {            "group": "Success 200",            "type": "[String]",            "optional": false,            "field": "allowedMailDomains",            "description": "<p>E-mail domains that are allowed to login and register with this organisation</p>"          }        ]      },      "examples": [        {          "title": "One or multiple e-mail domains are allowed:",          "content": "HTTP/1.1 200 OK\n{\n  \"organisationName\": \"My Company\",\n  \"backgroundImg\": \"http://domain.com/img/1234\",\n  \"logoImg\": \"http://domain.com/logo/1234\",\n  \"allowedMailDomains\": [\"gmail.com\", \"hotmail.com\"]\n}",          "type": "json"        },        {          "title": "All e-mail domains are allowed:",          "content": "HTTP/1.1 200 OK\n{\n  \"organisationName\": \"My Company\",\n  \"backgroundImg\": \"http://domain.com/img/1234\",\n  \"logoImg\": \"http://domain.com/logo/1234\",\n  \"allowedMailDomains\": []\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/organisationRouter.js",    "groupTitle": "Organisation",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      },      "examples": [        {          "title": "No organisation found for the given name",          "content": "HTTP/1.1 404 Not Found\n{\n  \"type\": \"Invalid URL\",\n  \"message\": \"Organisation not found\"\n}",          "type": "json"        },        {          "title": "Missing or invalid body parameters",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Missing parameter(s)\",\n  \"message\": \"Please specify all required parameters in the body of your request\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/organisations/:organisationName/img?role=logo|background",    "title": "Upload an organisation logo- or background image",    "name": "uploadImage",    "group": "Organisation",    "description": "<p>This endpoint is used during the creation of an organisation. Here, the logo and background images can be uploaded. An organisation can only have one logo and one background image</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "organisationName",            "description": "<p>The name of the non-existing organisation that the image is destined for</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>The role of the image (query param)</p>"          },          {            "group": "Parameter",            "type": "File",            "optional": false,            "field": "image",            "description": "<p>The image file that needs to be saved on the server (format must be .jpg, .gif or .png)</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "success",            "description": "<p>Success indicator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "fileName",            "description": "<p>Filename of the uploaded image on the server</p>"          }        ]      },      "examples": [        {          "title": "File successfully uploaded:",          "content": "HTTP/1.1 200 OK\n{ \"success\": true,\n  \"fileName\": \"filename.jpg\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Something has gone wrong while trying to upload the image",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Image upload error\",\n  \"message\": \"Something went wrong when trying to upload your image\"\n}",          "type": "json"        },        {          "title": "File is too large",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Image upload error\",\n  \"message\": \"The provided image is too large\"\n}",          "type": "json"        },        {          "title": "Form field has the wrong name",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Image upload error\",\n  \"message\": \"Something has gone wrong during the image upload. Please check the form field name, it should be 'image\"\n}",          "type": "json"        },        {          "title": "Query parameter is missing",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Image upload error\",\n  \"message\": \"Missing query parameter 'role'\"\n}",          "type": "json"        },        {          "title": "Wrong image role (can only be 'logo' or 'background')",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"type\": \"Invalid role\",\n  \"message\": \"Image role can only be 'logo' or 'background'\"\n}",          "type": "json"        },        {          "title": "Organisation already exists (not allowed to change image)",          "content": "HTTP/1.1 403 Forbidden\n{\n  \"type\": \"Organisation already exists\",\n  \"message\": \"There is already an organisation with name organisationName. You can't upload images for this organisation'\"\n}",          "type": "json"        },        {          "title": "Internal server error",          "content": "HTTP/1.1 500 Internal Server Error\nAn error occured on the server while processing your request",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "type",            "description": "<p>The type of error message.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>The error message</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/imageRouter/addOrganisationImgRouter.js",    "groupTitle": "Organisation"  }] });
